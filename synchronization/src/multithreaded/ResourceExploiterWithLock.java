package src.multithreaded;

import java.util.concurrent.TimeUnit;
import java.util.concurrent.locks.ReentrantLock;

public class ResourceExploiterWithLock extends ResourcesExploiter {
    private final ReentrantLock lock;

    public ResourceExploiterWithLock(int lock) {
        super(lock);
        this.lock = new ReentrantLock();
    }

    public void exploit() {
        try {
            if (lock.tryLock(10, TimeUnit.SECONDS)) {
                this.setRsc(this.getRsc() + 1);
            }
        } catch (InterruptedException e) {
            e.printStackTrace();
        } finally {
            lock.unlock();
        }
    }
}
